#include <Wire.h> // Mengimpor library untuk I2C
#include <RTClib.h> // Mengimpor library untuk RTC
#include <Adafruit_GFX.h> // Mengimpor library grafis Adafruit
#include <Adafruit_SSD1306.h> // Mengimpor library untuk OLED
#include <SPI.h> // Mengimpor library untuk komunikasi SPI
#include <SD.h> // Mengimpor library untuk SD card
#include "DFRobot_ESP_PH.h" // Mengimpor library untuk sensor pH
#include "EEPROM.h" // Mengimpor library untuk EEPROM

#define SCREEN_WIDTH 128 // Lebar layar OLED
#define SCREEN_HEIGHT 64 // Tinggi layar OLED
#define OLED_RESET -1 // Reset pin untuk OLED
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET); // Membuat objek untuk OLED

DFRobot_ESP_PH ph; // Membuat objek untuk sensor pH
#define ESPADC 4095.0 // Nilai ADC dari ESP
#define ESPVOLTAGE 5000 // Nilai tegangan ESP
#define PH_PIN 34 // Nomor pin GPIO untuk sensor pH
float voltage, phValue, temperature = 32; // Variabel untuk menyimpan nilai pH, tegangan, dan suhu

#define CS_PIN 5 // Pin CS untuk SD card

RTC_DS3231 rtc; // Membuat objek RTC
File myFile; // Variabel untuk file
String logData; // Variabel untuk data log
String dateTimeText; // Variabel untuk menyimpan date dan time

const unsigned char logoBitmap[] PROGMEM = { 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x51, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x20, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x89, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x60, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x1f, 0xfc, 0xf0, 0x79, 0x3e, 0x1e, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf8, 0x1f, 0xf8, 0xe0, 0x1d, 0x03, 0x81, 0xf8, 0x1f, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0xcc, 0x30, 0x19, 0xc8, 0x7d, 0x09, 0xc7, 0x1e, 0x31, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0x20, 0x00, 0x1f, 0xa5, 0x01, 0x00, 0xfe, 0xc0, 0x02, 0x70, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1c, 0x80, 0x00, 0x0f, 0x60, 0x00, 0x00, 0x79, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1d, 0x1e, 0x01, 0x0c, 0x1f, 0x00, 0xf8, 0x12, 0x08, 0x30, 0x1c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1d, 0x3f, 0xff, 0x03, 0x00, 0x00, 0x00, 0x20, 0x0f, 0xf0, 0x0c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x38, 0x7f, 0xff, 0x98, 0x30, 0xff, 0x00, 0x00, 0x7f, 0xfe, 0x0e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x72, 0xe3, 0xf8, 0xb0, 0x23, 0xff, 0xc0, 0x00, 0x8f, 0xe3, 0x0e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x32, 0xd7, 0xff, 0xa1, 0xa4, 0x7f, 0x10, 0x80, 0xbf, 0xfd, 0x0e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x38, 0x7d, 0xe7, 0x91, 0xaf, 0xff, 0xf0, 0x80, 0xfd, 0xbf, 0x1c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0x3e, 0x1e, 0x08, 0x0f, 0xc1, 0xf0, 0x00, 0x7f, 0xfc, 0x78, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x01, 0xc0, 0x00, 0xf2, 0x03, 0xe7, 0xe0, 0x00, 0x0f, 0xf0, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x30, 0x00, 0x3e, 0x00, 0xff, 0x00, 0x38, 0x80, 0x00, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0x71, 0xe2, 0x3f, 0xe0, 0x00, 0x03, 0xfa, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x3c, 0x3f, 0x3c, 0x07, 0x84, 0x00, 0x01, 0xf1, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x73, 0xce, 0x1c, 0xc0, 0x7b, 0x00, 0x08, 0x0e, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xcf, 0xf1, 0x21, 0xf1, 0xfe, 0x00, 0x3e, 0x1f, 0x80, 0x01, 0xe1, 0xc0, 0x00, 0x00,
  0x00, 0x03, 0xbe, 0xff, 0x3f, 0xd7, 0xff, 0xe7, 0xfb, 0xa5, 0xfe, 0x3f, 0x34, 0xe0, 0x00, 0x00,
  0x00, 0x07, 0x7e, 0xb1, 0xe1, 0x8f, 0xd0, 0x40, 0x71, 0xe0, 0xeb, 0xa6, 0x3c, 0x70, 0x00, 0x00,
  0x00, 0x0e, 0xfc, 0x82, 0x33, 0x1f, 0x90, 0x42, 0x61, 0xf1, 0xe8, 0x2c, 0x1e, 0x38, 0x00, 0x00,
  0x00, 0x0e, 0xf2, 0x03, 0x38, 0x3e, 0x00, 0x77, 0x00, 0x38, 0x0e, 0xe0, 0x26, 0x38, 0x00, 0x00,
  0x00, 0x0e, 0xfc, 0x7f, 0xbf, 0xbf, 0x0f, 0xf7, 0xf8, 0xf8, 0xfe, 0xff, 0x1e, 0x38, 0x00, 0x00,
  0x00, 0x06, 0x7c, 0xfd, 0xf7, 0x9f, 0x8f, 0xbd, 0xf8, 0xf1, 0xf3, 0xdf, 0x1c, 0x30, 0x00, 0x00,
  0x00, 0x07, 0x26, 0xfd, 0xe7, 0x0c, 0xdf, 0xbc, 0xe3, 0xb9, 0xf3, 0xdc, 0x32, 0x70, 0x00, 0x00,
  0x00, 0x03, 0x98, 0xff, 0x3f, 0x03, 0x1f, 0xe7, 0xe0, 0xc1, 0xfe, 0xfc, 0x09, 0xe0, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0xff, 0xbf, 0xe8, 0x9f, 0xe7, 0xf9, 0x1b, 0xfe, 0xff, 0xa3, 0x80, 0x00, 0x00,
  0x00, 0x00, 0x3d, 0xff, 0xbf, 0x83, 0x3f, 0xf7, 0xf0, 0x63, 0xfe, 0xfe, 0x1e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1e, 0x00, 0x00, 0x07, 0x80, 0x04, 0x00, 0xf0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0x3e, 0x1e, 0x3e, 0x18, 0x61, 0xcc, 0xf8, 0xfc, 0xfc, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0x73, 0xb1, 0xb1, 0x98, 0xf1, 0xcc, 0xce, 0xc0, 0xc6, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0x71, 0xb1, 0xb1, 0x98, 0xd1, 0xec, 0xc6, 0xc0, 0xc6, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0x70, 0x31, 0xbf, 0x19, 0x99, 0xbc, 0xc6, 0xf8, 0xce, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0x70, 0x31, 0xb3, 0x19, 0xf9, 0x9c, 0xc6, 0xc0, 0xfc, 0xc0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0x73, 0xb3, 0xb3, 0x9b, 0x0d, 0x8c, 0xfe, 0xc0, 0xd9, 0xc0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x07, 0x73, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xcc, 0xc0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0x3e, 0x01, 0x83, 0xa9, 0x96, 0x69, 0x81, 0x00, 0x4e, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x03, 0xc3, 0xff, 0x80, 0x00, 0x00, 0x00, 0x01, 0xff, 0xe0, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xff, 0x01, 0xc0, 0x02, 0x60, 0x80, 0x07, 0x80, 0xff, 0xc0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x3c, 0x0f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0xfe, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xfe, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0xfe, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7c, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
}; // Data bitmap logo

void setup() {
  Serial.begin(115200); // Memulai komunikasi serial
  Wire.begin(); // Memulai komunikasi I2C

  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Inisialisasi OLED
    Serial.println(F("Gagal menemukan OLED")); // Tampilkan pesan kesalahan jika gagal
    for (;;); // Hentikan program
  }

  display.clearDisplay(); // Bersihkan tampilan OLED
  display.setTextSize(1); // Atur ukuran teks
  display.setTextColor(SSD1306_WHITE); // Atur warna teks
  display.display(); // Tampilkan perubahan

  showLogo(); // Tampilkan logo

  initRTC(); // Inisialisasi RTC
  initSD(); // Inisialisasi SD card
}

void initRTC() {
  if (!rtc.begin()) { // Cek apakah RTC terdeteksi
    Serial.println("RTC tidak ditemukan!"); // Tampilkan pesan kesalahan
    while (1); // Hentikan program
  }
  // rtc.adjust(DateTime(F(_DATE), F(TIME_))); // Atur waktu RTC ke waktu kompilasi
}

void initSD() {
  if (!SD.begin()) { // Cek apakah SD card berhasil diinisialisasi
    Serial.println("Gagal menginisialisasi SD card!"); // Tampilkan pesan kesalahan
    while (1); // Hentikan program
  }
}

void showLogo() {
  display.clearDisplay(); // Bersihkan tampilan
  display.drawBitmap(0, 0, logoBitmap, SCREEN_WIDTH, SCREEN_HEIGHT, SSD1306_WHITE); // Gambar logo
  display.display(); // Tampilkan logo
  delay(3000); // Tunggu 3 detik
}

void ambilWaktu() {
  DateTime now = rtc.now(); // Ambil waktu saat ini dari RTC
  char buffer[20]; // Buffer untuk menyimpan string format waktu
  sprintf(buffer, "%02d/%02d/%04d %02d:%02d:%02d", 
          now.day(), now.month(), now.year(), 
          now.hour(), now.minute(), now.second()); // Format tanggal dan waktu ke dalam buffer
  dateTimeText = String(buffer); // Simpan hasil format ke dalam dateTimeText
}

void ambilData() {
  static unsigned long timepoint = millis(); // Waktu saat ini
  if (millis() - timepoint > 1000U) { // Cek interval 1 detik
    timepoint = millis(); // Update waktu
    voltage = analogRead(PH_PIN) / ESPADC * ESPVOLTAGE; // Baca nilai tegangan dari sensor pH
    phValue = ph.readPH(voltage, temperature); // Hitung nilai pH
  }
}

void simpanData() {
  logData = String(dateTimeText) + ", pH: " + String(phValue, 2); // Format data log
  myFile = SD.open("/data_pH.txt", FILE_APPEND); // Buka file untuk menambahkan data
  if (myFile) { // Cek apakah file berhasil dibuka
    myFile.println(logData); // Simpan data log ke file
    myFile.close(); // Tutup file
    Serial.println("Data berhasil disimpan: " + logData); // Tampilkan pesan sukses
  } else {
    Serial.println("Gagal membuka file data_pH.txt"); // Tampilkan pesan kesalahan
  }
}

void tampilData() {
  display.clearDisplay(); // Bersihkan tampilan

  // Tampilkan tanggal dan waktu
  int16_t x_dateTime = (SCREEN_WIDTH - dateTimeText.length() * 6) / 2; // Hitung posisi tengah
  display.setCursor(x_dateTime, 0); // Atur posisi kursor
  display.print(dateTimeText); // Tampilkan tanggal dan waktu

  // Garis pemisah
  display.drawLine(0, 10, SCREEN_WIDTH, 10, SSD1306_WHITE); // Gambar garis di posisi 10

  // Tampilkan nilai pH
  String phText = "pH"; // Teks "pH"
  int16_t x_pH = (SCREEN_WIDTH - phText.length() * 6) / 2; // Hitung posisi tengah untuk teks pH
  display.setCursor(x_pH, 20); // Atur posisi kursor
  display.print(phText); // Tampilkan teks pH

  String phValueText = String(phValue, 2); // Format nilai pH
  int16_t x_phValue = (SCREEN_WIDTH - phValueText.length() * 6) / 2; // Hitung posisi tengah untuk nilai pH
  display.setCursor(x_phValue, 40); // Atur posisi kursor
  display.print(phValueText); // Tampilkan nilai pH

  display.display(); // Tampilkan semua perubahan di layar
}

void loop() {
  ambilWaktu(); // Ambil waktu saat ini
  ambilData(); // Ambil data pH
  simpanData(); // Simpan data ke SD card
  tampilData(); // Tampilkan data di OLED
  delay(6000); // Tunggu 6 detik sebelum mengulang
}
